{"ast":null,"code":"var _jsxFileName = \"/Users/sachin/Downloads/Blog/client/src/pages/login/Login.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useContext, useRef } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { Context } from \"../../context/Context\";\nimport \"./login.css\"; //Exporting the login function\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n\n  const userRef = useRef();\n  const passwordRef = useRef();\n  const {\n    user,\n    dispatch,\n    isFetching\n  } = useContext(Context); //Handling the submit\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    dispatch({\n      type: \"LOGIN_START\"\n    });\n\n    try {\n      // Retrieving the information entered by the user\n      const res = await axios.post(\"http://localhost:8082/api/auth/login\", {\n        username: userRef.current.value,\n        password: passwordRef.current.value\n      }); // If everything goes right, the login is succeeded\n\n      dispatch({\n        type: \"LOGIN_SUCCESS\",\n        payload: res.data\n      });\n    } catch (err) {\n      // If any error comes, it's failed\n      dispatch({\n        type: \"LOGIN_FAILURE\"\n      });\n    }\n  };\n\n  console.log(user);\n  return (\n    /*#__PURE__*/\n    // Creating a login form\n    _jsxDEV(\"div\", {\n      className: \"login\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"loginRegisterButton\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"link\",\n          to: \"/register\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"loginTitle\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"loginForm\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"loginInput\",\n          placeholder: \"Enter your username...\",\n          ref: userRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"loginInput\",\n          placeholder: \"Enter your password...\",\n          ref: passwordRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"loginButton\",\n          type: \"submit\",\n          disabled: isFetching,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(Login, \"YqmuOFlnREsWTYWuBAsSjvEMKck=\");\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/sachin/Downloads/Blog/client/src/pages/login/Login.jsx"],"names":["axios","useContext","useRef","Link","useParams","Context","Login","userRef","passwordRef","user","dispatch","isFetching","handleSubmit","e","preventDefault","type","res","post","username","current","value","password","payload","data","err","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,MAArB,QAAmC,OAAnC;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,kBAAhC;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,OAAO,aAAP,C,CAEA;;;AACA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAC9B,QAAMC,OAAO,GAAGL,MAAM,EAAtB;AACA,QAAMM,WAAW,GAAGN,MAAM,EAA1B;AACA,QAAM;AAAEO,IAAAA,IAAF;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA;AAAlB,MAAiCV,UAAU,CAACI,OAAD,CAAjD,CAH8B,CAK9B;;AACA,QAAMO,YAAY,GAAG,MAAOC,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACC,cAAF;AACAJ,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;;AACA,QAAI;AACF;AACA,YAAMC,GAAG,GAAG,MAAMhB,KAAK,CAACiB,IAAN,CAAW,sCAAX,EAAmD;AACnEC,QAAAA,QAAQ,EAAEX,OAAO,CAACY,OAAR,CAAgBC,KADyC;AAEnEC,QAAAA,QAAQ,EAAEb,WAAW,CAACW,OAAZ,CAAoBC;AAFqC,OAAnD,CAAlB,CAFE,CAMF;;AACAV,MAAAA,QAAQ,CAAC;AAAEK,QAAAA,IAAI,EAAE,eAAR;AAAyBO,QAAAA,OAAO,EAAEN,GAAG,CAACO;AAAtC,OAAD,CAAR;AACD,KARD,CAQE,OAAOC,GAAP,EAAY;AACZ;AACAd,MAAAA,QAAQ,CAAC;AAAEK,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACD;AACF,GAfD;;AAiBAU,EAAAA,OAAO,CAACC,GAAR,CAAYjB,IAAZ;AACA;AAAA;AACE;AACA;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACA;AAAQ,QAAA,SAAS,EAAC,qBAAlB;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,MAAhB;AAAuB,UAAA,EAAE,EAAC,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADA,eAME;AAAM,QAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAOE;AAAM,QAAA,SAAS,EAAC,WAAhB;AAA4B,QAAA,QAAQ,EAAEG,YAAtC;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,SAAS,EAAC,YAFZ;AAGE,UAAA,WAAW,EAAC,wBAHd;AAIE,UAAA,GAAG,EAAEL;AAJP;AAAA;AAAA;AAAA;AAAA,gBAFF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,eASE;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,SAAS,EAAC,YAFZ;AAGE,UAAA,WAAW,EAAC,wBAHd;AAIE,UAAA,GAAG,EAAEC;AAJP;AAAA;AAAA;AAAA;AAAA,gBATF,eAeE;AAAQ,UAAA,SAAS,EAAC,aAAlB;AAAgC,UAAA,IAAI,EAAC,QAArC;AAA8C,UAAA,QAAQ,EAAEG,UAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfF;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AA8BD;;GAtDuBL,K;;KAAAA,K","sourcesContent":["import axios from \"axios\";\nimport { useContext, useRef } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { Context } from \"../../context/Context\";\nimport \"./login.css\";\n\n//Exporting the login function\nexport default function Login() {\n  const userRef = useRef();\n  const passwordRef = useRef();\n  const { user, dispatch, isFetching } = useContext(Context);\n\n  //Handling the submit\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    dispatch({ type: \"LOGIN_START\" });\n    try {\n      // Retrieving the information entered by the user\n      const res = await axios.post(\"http://localhost:8082/api/auth/login\", {\n        username: userRef.current.value,\n        password: passwordRef.current.value,\n      });\n      // If everything goes right, the login is succeeded\n      dispatch({ type: \"LOGIN_SUCCESS\", payload: res.data });\n    } catch (err) {\n      // If any error comes, it's failed\n      dispatch({ type: \"LOGIN_FAILURE\" });\n    }\n  };\n\n  console.log(user)\n  return (\n    // Creating a login form\n    <div className=\"login\">\n    <button className=\"loginRegisterButton\">\n        <Link className=\"link\" to=\"/register\">\n          Register\n        </Link>\n      </button>\n      <span className=\"loginTitle\">Login</span>\n      <form className=\"loginForm\" onSubmit={handleSubmit}>\n        <label>Username</label>\n        <input\n          type=\"text\"\n          className=\"loginInput\"\n          placeholder=\"Enter your username...\"\n          ref={userRef}\n        />\n        <label>Password</label>\n        <input\n          type=\"password\"\n          className=\"loginInput\"\n          placeholder=\"Enter your password...\"\n          ref={passwordRef}\n        />\n        <button className=\"loginButton\" type=\"submit\" disabled={isFetching}>\n          Login\n        </button>\n      </form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}